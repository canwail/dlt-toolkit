name: Windows Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Rust
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # Build the project
      - name: Build
        run: cargo build --release

      # Create a .zip file with the hash name
      - name: Create ZIP Artifact
        run: |
          New-Item -ItemType Directory -Path artifacts -Force
          Compress-Archive -Path target/release/dlt-toolkit.exe -DestinationPath artifacts/dlt-toolkit-${{ github.sha }}.zip
        shell: powershell

      # Publish the release using gh-release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/dlt-toolkit-${{ github.sha }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the .zip file to the release
      - name: Upload ZIP Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: artifacts/dlt-toolkit-${{ github.sha }}.zip
          asset_name: dlt-toolkit-${{ github.sha }}.zip
          asset_content_type: application/zip
